<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.interheart.stone.dao.entity.mapper.EmployInfoMapper">
  <resultMap id="BaseResultMap" type="cn.interheart.stone.dao.entity.EmployInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_id" jdbcType="TINYINT" property="companyId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="employ_depart_id" jdbcType="INTEGER" property="employDepartId" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="family_name" jdbcType="VARCHAR" property="familyName" />
    <result column="is_marry" jdbcType="TINYINT" property="isMarry" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="graduation_date" jdbcType="TIMESTAMP" property="graduationDate" />
    <result column="origin" jdbcType="VARCHAR" property="origin" />
    <result column="present_address" jdbcType="VARCHAR" property="presentAddress" />
    <result column="registered_residence" jdbcType="VARCHAR" property="registeredResidence" />
    <result column="hiredate_date" jdbcType="TIMESTAMP" property="hiredateDate" />
    <result column="start_work_date" jdbcType="TIMESTAMP" property="startWorkDate" />
    <result column="contract_number" jdbcType="VARCHAR" property="contractNumber" />
    <result column="contract_type" jdbcType="VARCHAR" property="contractType" />
    <result column="contract_start_date" jdbcType="TIMESTAMP" property="contractStartDate" />
    <result column="contract_stop_date" jdbcType="TIMESTAMP" property="contractStopDate" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_id, name, phone, id_card, employ_depart_id, position, level, sex, family_name, 
    is_marry, education, school, graduation_date, origin, present_address, registered_residence, 
    hiredate_date, start_work_date, contract_number, contract_type, contract_start_date, 
    contract_stop_date, gmt_create, gmt_modified, status
  </sql>
  <select id="selectByExample" parameterType="cn.interheart.stone.dao.entity.EmployInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employ_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employ_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employ_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.interheart.stone.dao.entity.EmployInfoExample">
    delete from employ_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.interheart.stone.dao.entity.EmployInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employ_info (company_id, name, phone, 
      id_card, employ_depart_id, position, 
      level, sex, family_name, 
      is_marry, education, school, 
      graduation_date, origin, present_address, 
      registered_residence, hiredate_date, start_work_date, 
      contract_number, contract_type, contract_start_date, 
      contract_stop_date, gmt_create, gmt_modified, 
      status)
    values (#{companyId,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{employDepartId,jdbcType=INTEGER}, #{position,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{familyName,jdbcType=VARCHAR}, 
      #{isMarry,jdbcType=TINYINT}, #{education,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{graduationDate,jdbcType=TIMESTAMP}, #{origin,jdbcType=VARCHAR}, #{presentAddress,jdbcType=VARCHAR}, 
      #{registeredResidence,jdbcType=VARCHAR}, #{hiredateDate,jdbcType=TIMESTAMP}, #{startWorkDate,jdbcType=TIMESTAMP}, 
      #{contractNumber,jdbcType=VARCHAR}, #{contractType,jdbcType=VARCHAR}, #{contractStartDate,jdbcType=TIMESTAMP}, 
      #{contractStopDate,jdbcType=TIMESTAMP}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.interheart.stone.dao.entity.EmployInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employ_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="employDepartId != null">
        employ_depart_id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="familyName != null">
        family_name,
      </if>
      <if test="isMarry != null">
        is_marry,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="graduationDate != null">
        graduation_date,
      </if>
      <if test="origin != null">
        origin,
      </if>
      <if test="presentAddress != null">
        present_address,
      </if>
      <if test="registeredResidence != null">
        registered_residence,
      </if>
      <if test="hiredateDate != null">
        hiredate_date,
      </if>
      <if test="startWorkDate != null">
        start_work_date,
      </if>
      <if test="contractNumber != null">
        contract_number,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="contractStartDate != null">
        contract_start_date,
      </if>
      <if test="contractStopDate != null">
        contract_stop_date,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="employDepartId != null">
        #{employDepartId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="familyName != null">
        #{familyName,jdbcType=VARCHAR},
      </if>
      <if test="isMarry != null">
        #{isMarry,jdbcType=TINYINT},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="graduationDate != null">
        #{graduationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="presentAddress != null">
        #{presentAddress,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="hiredateDate != null">
        #{hiredateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startWorkDate != null">
        #{startWorkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractNumber != null">
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="contractStartDate != null">
        #{contractStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractStopDate != null">
        #{contractStopDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.interheart.stone.dao.entity.EmployInfoExample" resultType="java.lang.Long">
    select count(*) from employ_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employ_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.employDepartId != null">
        employ_depart_id = #{record.employDepartId,jdbcType=INTEGER},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.familyName != null">
        family_name = #{record.familyName,jdbcType=VARCHAR},
      </if>
      <if test="record.isMarry != null">
        is_marry = #{record.isMarry,jdbcType=TINYINT},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationDate != null">
        graduation_date = #{record.graduationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.origin != null">
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
      <if test="record.presentAddress != null">
        present_address = #{record.presentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredResidence != null">
        registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="record.hiredateDate != null">
        hiredate_date = #{record.hiredateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startWorkDate != null">
        start_work_date = #{record.startWorkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractNumber != null">
        contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.contractType != null">
        contract_type = #{record.contractType,jdbcType=VARCHAR},
      </if>
      <if test="record.contractStartDate != null">
        contract_start_date = #{record.contractStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractStopDate != null">
        contract_stop_date = #{record.contractStopDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employ_info
    set id = #{record.id,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      employ_depart_id = #{record.employDepartId,jdbcType=INTEGER},
      position = #{record.position,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      family_name = #{record.familyName,jdbcType=VARCHAR},
      is_marry = #{record.isMarry,jdbcType=TINYINT},
      education = #{record.education,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      graduation_date = #{record.graduationDate,jdbcType=TIMESTAMP},
      origin = #{record.origin,jdbcType=VARCHAR},
      present_address = #{record.presentAddress,jdbcType=VARCHAR},
      registered_residence = #{record.registeredResidence,jdbcType=VARCHAR},
      hiredate_date = #{record.hiredateDate,jdbcType=TIMESTAMP},
      start_work_date = #{record.startWorkDate,jdbcType=TIMESTAMP},
      contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      contract_type = #{record.contractType,jdbcType=VARCHAR},
      contract_start_date = #{record.contractStartDate,jdbcType=TIMESTAMP},
      contract_stop_date = #{record.contractStopDate,jdbcType=TIMESTAMP},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.interheart.stone.dao.entity.EmployInfo">
    update employ_info
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="employDepartId != null">
        employ_depart_id = #{employDepartId,jdbcType=INTEGER},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="familyName != null">
        family_name = #{familyName,jdbcType=VARCHAR},
      </if>
      <if test="isMarry != null">
        is_marry = #{isMarry,jdbcType=TINYINT},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="graduationDate != null">
        graduation_date = #{graduationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="origin != null">
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="presentAddress != null">
        present_address = #{presentAddress,jdbcType=VARCHAR},
      </if>
      <if test="registeredResidence != null">
        registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      </if>
      <if test="hiredateDate != null">
        hiredate_date = #{hiredateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startWorkDate != null">
        start_work_date = #{startWorkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractNumber != null">
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null">
        contract_type = #{contractType,jdbcType=VARCHAR},
      </if>
      <if test="contractStartDate != null">
        contract_start_date = #{contractStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractStopDate != null">
        contract_stop_date = #{contractStopDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.interheart.stone.dao.entity.EmployInfo">
    update employ_info
    set company_id = #{companyId,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      employ_depart_id = #{employDepartId,jdbcType=INTEGER},
      position = #{position,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      family_name = #{familyName,jdbcType=VARCHAR},
      is_marry = #{isMarry,jdbcType=TINYINT},
      education = #{education,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      graduation_date = #{graduationDate,jdbcType=TIMESTAMP},
      origin = #{origin,jdbcType=VARCHAR},
      present_address = #{presentAddress,jdbcType=VARCHAR},
      registered_residence = #{registeredResidence,jdbcType=VARCHAR},
      hiredate_date = #{hiredateDate,jdbcType=TIMESTAMP},
      start_work_date = #{startWorkDate,jdbcType=TIMESTAMP},
      contract_number = #{contractNumber,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=VARCHAR},
      contract_start_date = #{contractStartDate,jdbcType=TIMESTAMP},
      contract_stop_date = #{contractStopDate,jdbcType=TIMESTAMP},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.interheart.stone.dao.entity.mapper.ProjectVisitMapper">
  <resultMap id="BaseResultMap" type="cn.interheart.stone.dao.entity.ProjectVisit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="contact_time" jdbcType="TIMESTAMP" property="contactTime" />
    <result column="contact_type" jdbcType="TINYINT" property="contactType" />
    <result column="follow_up_description" jdbcType="VARCHAR" property="followUpDescription" />
    <result column="customer_intention" jdbcType="TINYINT" property="customerIntention" />
    <result column="next_context" jdbcType="VARCHAR" property="nextContext" />
    <result column="estimated_time" jdbcType="TIMESTAMP" property="estimatedTime" />
    <result column="earnest_money" jdbcType="DECIMAL" property="earnestMoney" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="pay_date" jdbcType="TIMESTAMP" property="payDate" />
    <result column="exec_date" jdbcType="TIMESTAMP" property="execDate" />
    <result column="cause_of_loss" jdbcType="VARCHAR" property="causeOfLoss" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, contact_time, contact_type, follow_up_description, customer_intention, 
    next_context, estimated_time, earnest_money, pay_type, pay_account, pay_date, exec_date, 
    cause_of_loss, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="cn.interheart.stone.dao.entity.ProjectVisitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_visit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from project_visit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project_visit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.interheart.stone.dao.entity.ProjectVisitExample">
    delete from project_visit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.interheart.stone.dao.entity.ProjectVisit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project_visit (project_id, contact_time, contact_type, 
      follow_up_description, customer_intention, 
      next_context, estimated_time, earnest_money, 
      pay_type, pay_account, pay_date, 
      exec_date, cause_of_loss, gmt_create, 
      gmt_modified)
    values (#{projectId,jdbcType=INTEGER}, #{contactTime,jdbcType=TIMESTAMP}, #{contactType,jdbcType=TINYINT}, 
      #{followUpDescription,jdbcType=VARCHAR}, #{customerIntention,jdbcType=TINYINT}, 
      #{nextContext,jdbcType=VARCHAR}, #{estimatedTime,jdbcType=TIMESTAMP}, #{earnestMoney,jdbcType=DECIMAL}, 
      #{payType,jdbcType=VARCHAR}, #{payAccount,jdbcType=VARCHAR}, #{payDate,jdbcType=TIMESTAMP}, 
      #{execDate,jdbcType=TIMESTAMP}, #{causeOfLoss,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.interheart.stone.dao.entity.ProjectVisit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into project_visit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="contactTime != null">
        contact_time,
      </if>
      <if test="contactType != null">
        contact_type,
      </if>
      <if test="followUpDescription != null">
        follow_up_description,
      </if>
      <if test="customerIntention != null">
        customer_intention,
      </if>
      <if test="nextContext != null">
        next_context,
      </if>
      <if test="estimatedTime != null">
        estimated_time,
      </if>
      <if test="earnestMoney != null">
        earnest_money,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payAccount != null">
        pay_account,
      </if>
      <if test="payDate != null">
        pay_date,
      </if>
      <if test="execDate != null">
        exec_date,
      </if>
      <if test="causeOfLoss != null">
        cause_of_loss,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contactTime != null">
        #{contactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contactType != null">
        #{contactType,jdbcType=TINYINT},
      </if>
      <if test="followUpDescription != null">
        #{followUpDescription,jdbcType=VARCHAR},
      </if>
      <if test="customerIntention != null">
        #{customerIntention,jdbcType=TINYINT},
      </if>
      <if test="nextContext != null">
        #{nextContext,jdbcType=VARCHAR},
      </if>
      <if test="estimatedTime != null">
        #{estimatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earnestMoney != null">
        #{earnestMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="execDate != null">
        #{execDate,jdbcType=TIMESTAMP},
      </if>
      <if test="causeOfLoss != null">
        #{causeOfLoss,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.interheart.stone.dao.entity.ProjectVisitExample" resultType="java.lang.Long">
    select count(*) from project_visit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update project_visit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.contactTime != null">
        contact_time = #{record.contactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contactType != null">
        contact_type = #{record.contactType,jdbcType=TINYINT},
      </if>
      <if test="record.followUpDescription != null">
        follow_up_description = #{record.followUpDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.customerIntention != null">
        customer_intention = #{record.customerIntention,jdbcType=TINYINT},
      </if>
      <if test="record.nextContext != null">
        next_context = #{record.nextContext,jdbcType=VARCHAR},
      </if>
      <if test="record.estimatedTime != null">
        estimated_time = #{record.estimatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.earnestMoney != null">
        earnest_money = #{record.earnestMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.payAccount != null">
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payDate != null">
        pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.execDate != null">
        exec_date = #{record.execDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.causeOfLoss != null">
        cause_of_loss = #{record.causeOfLoss,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update project_visit
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      contact_time = #{record.contactTime,jdbcType=TIMESTAMP},
      contact_type = #{record.contactType,jdbcType=TINYINT},
      follow_up_description = #{record.followUpDescription,jdbcType=VARCHAR},
      customer_intention = #{record.customerIntention,jdbcType=TINYINT},
      next_context = #{record.nextContext,jdbcType=VARCHAR},
      estimated_time = #{record.estimatedTime,jdbcType=TIMESTAMP},
      earnest_money = #{record.earnestMoney,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      pay_date = #{record.payDate,jdbcType=TIMESTAMP},
      exec_date = #{record.execDate,jdbcType=TIMESTAMP},
      cause_of_loss = #{record.causeOfLoss,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.interheart.stone.dao.entity.ProjectVisit">
    update project_visit
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="contactTime != null">
        contact_time = #{contactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="contactType != null">
        contact_type = #{contactType,jdbcType=TINYINT},
      </if>
      <if test="followUpDescription != null">
        follow_up_description = #{followUpDescription,jdbcType=VARCHAR},
      </if>
      <if test="customerIntention != null">
        customer_intention = #{customerIntention,jdbcType=TINYINT},
      </if>
      <if test="nextContext != null">
        next_context = #{nextContext,jdbcType=VARCHAR},
      </if>
      <if test="estimatedTime != null">
        estimated_time = #{estimatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="earnestMoney != null">
        earnest_money = #{earnestMoney,jdbcType=DECIMAL},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payAccount != null">
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payDate != null">
        pay_date = #{payDate,jdbcType=TIMESTAMP},
      </if>
      <if test="execDate != null">
        exec_date = #{execDate,jdbcType=TIMESTAMP},
      </if>
      <if test="causeOfLoss != null">
        cause_of_loss = #{causeOfLoss,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.interheart.stone.dao.entity.ProjectVisit">
    update project_visit
    set project_id = #{projectId,jdbcType=INTEGER},
      contact_time = #{contactTime,jdbcType=TIMESTAMP},
      contact_type = #{contactType,jdbcType=TINYINT},
      follow_up_description = #{followUpDescription,jdbcType=VARCHAR},
      customer_intention = #{customerIntention,jdbcType=TINYINT},
      next_context = #{nextContext,jdbcType=VARCHAR},
      estimated_time = #{estimatedTime,jdbcType=TIMESTAMP},
      earnest_money = #{earnestMoney,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      pay_date = #{payDate,jdbcType=TIMESTAMP},
      exec_date = #{execDate,jdbcType=TIMESTAMP},
      cause_of_loss = #{causeOfLoss,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>